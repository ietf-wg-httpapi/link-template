



Building Blocks for HTTP APIs                              M. Nottingham
Internet-Draft                                              1 April 2024
Intended status: Standards Track                                        
Expires: 3 October 2024


                  The Link-Template HTTP Header Field
                draft-ietf-httpapi-link-template-latest

Abstract

   This specification defines the Link-Template HTTP header field,
   providing a means for describing the structure of a link between two
   resources, so that new links can be generated.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at https://ietf-wg-
   httpapi.github.io/link-template/draft-ietf-httpapi-link-
   template.html.  Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-ietf-httpapi-link-template/.

   Discussion of this document takes place on the Building Blocks for
   HTTP APIs Working Group mailing list (mailto:httpapi@ietf.org), which
   is archived at https://mailarchive.ietf.org/arch/browse/httpapi/.
   Subscribe at https://www.ietf.org/mailman/listinfo/httpapi/.

   Source for this draft and an issue tracker can be found at
   https://github.com/ietf-wg-httpapi/link-template.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 3 October 2024.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Notational Conventions
   2.  The Link-Template Header Field
     2.1.  The 'var-base' parameter
   3.  Security Considerations
   4.  IANA Considerations
   5.  Normative References
   Author's Address

1.  Introduction

   [URI-TEMPLATE] defines a syntax for templates that, when expanded
   using a set of variables, results in a URI [URI].

   This specification defines a HTTP header field [HTTP] for conveying
   templates for links in the headers of a HTTP message.  It is
   complimentary to the Link header field defined in Section 3 of
   [WEB-LINKING], which carries links directly.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This specification uses the following terms from [STRUCTURED-FIELDS]:
   List, String, Display String, Parameter.

2.  The Link-Template Header Field

   The Link-Template header field is a Structured Field
   [STRUCTURED-FIELDS] that serializes one or more links into HTTP
   message metadata.  It is semantically equivalent to the Link header
   field defined in Section 3 of [WEB-LINKING], except that the link
   target and link anchor can contain URI Templates [URI-TEMPLATE].

   Its value is a List of Strings.  Each String is a URI Template, and
   Parameters on it carry associated metadata.

   For example:

   Link-Template: "/{username}"; rel="item"

   indicates that a resource with the relation type "item" for a given
   "username" can be found by expanding the "username" variable into the
   template given.

   The link target (as defined in Section 2 of [WEB-LINKING]) is the
   result of expanding the URI Template [URI-TEMPLATE] (being converted
   to an absolute URI after expansion, if necessary).

   The link context and link relation type for the link (as defined in
   Section 2 of [WEB-LINKING]) are conveyed using the "anchor" and "rel"
   Parameters, as they are for the Link header field in Section 3 of
   [WEB-LINKING].  Their values MUST be Strings.

   However, the "anchor" Parameter MAY contain a URI Template.  For
   example:

   Link-Template: "/books/{book_id}/author";
                  rel="author"; anchor="#{book_id}"

   Here, the link to the author for a particular book in a list of books
   can be found by following the link template.

   This specification defines additional semantics for the "var-base"
   Parameter on templated links; see below.

   The link's target attributes (as defined in Section 2.2 of
   [WEB-LINKING]) are conveyed using other Parameters, in a manner
   similar to the Link header field.  These Parameter values MUST be
   Strings, unless they contain non-ASCII characters, in which case they
   MUST be Display Strings.  Note that some target attribute names will
   not serialise as Structured Field Parameter keys (see Section 3.1.2
   of [STRUCTURED-FIELDS]).

   For example:

   Link-Template: "/author"; rel="author";
                  title=%"Bj%c3%b6rn J%c3%a4rnsida"

   Implementations MUST support all levels of template defined by
   [URI-TEMPLATE] in the link String and the anchor Parameter.

2.1.  The 'var-base' parameter

   When a templated link has a 'var-base' parameter, its value conveys a
   URI-reference that is used as a base URI for the variable names in
   the URI template.  This allows template variables to be globally
   identified, rather than specific to the context of use.

   Dereferencing the URI for a particular variable might lead to more
   information about the syntax or semantics of that variable;
   specification of particular formats for this information is out of
   scope for this document.

   To determine the URI for a given variable, the value given is used as
   a base URI in reference resolution (as specified in [URI]).  If the
   resulting URI is still relative, the context of the link is used as
   the base URI in a further resolution; see [WEB-LINKING].

   For example:

   Link-Template: "/widgets/{widget_id}";
                  rel="https://example.org/rel/widget";
                  var-base="https://example.org/vars/"

   indicates that a resource with the relation type
   "https://example.org/rel/widget" can be found by expanding the
   "https://example.org/vars/widget_id" variable into the template
   given.

   If the current context of the message that the header appears within
   is "https://example.org/", the same information could be conveyed by
   this header field:

   Link-Template: "/widgets/{widget_id}";
                  rel="https://example.org/rel/widget";
                  var-base="/vars/"

3.  Security Considerations

   The security consideration for the Link header field in [WEB-LINKING]
   and those for URI Templates [URI-TEMPLATE] both apply.

   Target attributes that are conveyed via Display Strings can be
   vulnerable to a wide variety of attacks.  See [UNICODE-SECURITY] for
   advice regarding their handling.  Specific advice is not given by
   this specification, since there are a variety of potential use cases
   for such attributes.

4.  IANA Considerations

   This specification enters the "Link-Template" into the Hypertext
   Transfer Protocol (HTTP) Field Name Registry.

   *  Field Name: Link-Template

   *  Status: permanent

   *  Specification document: [this document]

5.  Normative References

   [HTTP]     Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
              Ed., "HTTP Semantics", STD 97, RFC 9110,
              DOI 10.17487/RFC9110, June 2022,
              <https://www.rfc-editor.org/rfc/rfc9110>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [STRUCTURED-FIELDS]
              Nottingham, M. and P. Kamp, "Structured Field Values for
              HTTP", Work in Progress, Internet-Draft, draft-ietf-
              httpbis-sfbis-05, 23 January 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-
              sfbis-05>.

   [UNICODE-SECURITY]
              Davis, M. and M. Suignard, "Unicode Security
              Considerations", Unicode Technical Report #16, 19
              September 2014, <http://www.unicode.org/reports/tr36/>.

   [URI]      Berners-Lee, T., Fielding, R., and L. Masinter, "Uniform
              Resource Identifier (URI): Generic Syntax", STD 66,
              RFC 3986, DOI 10.17487/RFC3986, January 2005,
              <https://www.rfc-editor.org/rfc/rfc3986>.

   [URI-TEMPLATE]
              Gregorio, J., Fielding, R., Hadley, M., Nottingham, M.,
              and D. Orchard, "URI Template", RFC 6570,
              DOI 10.17487/RFC6570, March 2012,
              <https://www.rfc-editor.org/rfc/rfc6570>.

   [WEB-LINKING]
              Nottingham, M., "Web Linking", RFC 8288,
              DOI 10.17487/RFC8288, October 2017,
              <https://www.rfc-editor.org/rfc/rfc8288>.

Author's Address

   Mark Nottingham
   Prahran
   Australia
   Email: mnot@mnot.net
   URI:   https://www.mnot.net/
